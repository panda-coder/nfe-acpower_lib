<?php	/**************************	 * 	Changlog	 * 	 * 	 * 	21/08/2013 - Bug fix - Quando a nota nao possuir registro na tabela de xml 	 */	require_once('core.php');		class NfeSyslog_xml{				private $CNPJEmitente;		private $CNPJDestinatario;				private $NumeroNota;		private $entrada_saida;		private $natureza_operacao;		private $serie_nota;		private $emitente;		private $chave_nfe;		private $situacao;		private $danfe_criada;		private $data_danfe;		private $email_enviado;		private $data_email;		private $cpfcnpj;		private $data_emissao;		private $cpfcnpj_destinatario;		private $tipo_ambiente;		private $protocolo;		private $id_db;		private $versao_nfe;				private $domxml;		private $xml_str;				private $DbConnection;						function __construct($db, $xml){										$this->domxml = new DOMDocument(); 			$this->domxml->loadXML($xml);			$this->xml_str = $xml;						$this->DbConnection = $db;												$this->chave_nfe = $this->domxml->getElementsByTagName("infNFe")->item(0)->getAttribute("Id");						$this->chave_nfe = substr($this->chave_nfe, 3, strlen($this->chave_nfe) - 3);						$this->versao_nfe = $this->domxml->getElementsByTagName("infNFe")->item(0)->getAttribute("versao");						$this->NumeroNota = $this->domxml->getElementsByTagName("nNF")->item(0)->nodeValue;						$this->entrada_saida = $this->domxml->getElementsByTagName("tpNF")->item(0)->nodeValue;			$this->natureza_operacao = $this->domxml->getElementsByTagName("natOp")->item(0)->nodeValue;			$this->serie_nota = $this->domxml->getElementsByTagName("serie")->item(0)->nodeValue;			$this->emitente = $this->domxml->getElementsByTagName("emit")->item(0)->getElementsByTagName("xNome")->item(0)->nodeValue;							$this->cpfcnpj = $this->domxml->getElementsByTagName("emit")->item(0)->getElementsByTagName("CNPJ")->item(0)->nodeValue;			$this->data_emissao = $this->domxml->getElementsByTagName("dhEmi")->item(0)->nodeValue;;			$this->cpfcnpj_destinatario = $this->domxml->getElementsByTagName("dest")->item(0)->getElementsByTagName("CNPJ")->item(0)->nodeValue;			$this->tipo_ambiente = $this->domxml->getElementsByTagName("tpAmb")->item(0)->nodeValue;						//echo "NfeSyslog_xml instanciado";					}				public function getChave(){			return $this->chave_nfe;		}				public function getProtocol(){										$prot = $this->domxml->getElementsByTagName("infProt");			if ( $prot->length > 0){								$this->protocolo = $prot->item(0)->getElementsByTagName("nProt")->item(0)->nodeValue;							}												return $this->protocolo;		}				public function getNumeroNota(){			return $this->NumeroNota;		}		public function getEntradaSaida(){			return $this->entrada_saida;		}				public function getNaturezaOperacao(){			return $this->natureza_operacao;		}				public function getSerieNote(){			return $this->serie_nota;		}						public function getEmitente(){			return $this->emitente;		}				public function getDestinatario(){			return $this->domxml->getElementsByTagName("dest")->item(0)->getElementsByTagName("xNome")->item(0)->nodeValue;		}				public function getDataEmissao(){			return substr($this->data_emissao, 0, 10);		}				public function getEmailDest(){			return $this->domxml->getElementsByTagName("dest")->item(0)->getElementsByTagName("email")->item(0)->nodeValue;		}				public function getCNPJDest(){			return $this->cpfcnpj_destinatario;		}				public function getCNPJEmit(){			return $this->cpfcnpj;		}				private function getBdId(){					$dataset = $this->DbConnection->lookup("SELECT id_nfesyslog FROM t_nfesyslog WHERE CHAVE_NFE='" . $this->getChave() . "'");						if ( !empty($dataset) ){				list($id) = $dataset[0];																return $id;			}else{								return NULL;							}					}				private function ProtectString($str){			return mysql_real_escape_string($str);		}				public function getSit(){					$dataset = $this->DbConnection->lookup("SELECT situacao, id_nfesyslog FROM t_nfesyslog WHERE CHAVE_NFE='" . $this->getChave() . "'");						if ( !empty($dataset) ){				list($sit, $this->id_db ) = $dataset[0];																return $sit;			}else{								return NULL;							}					}				public function SaveNFE(){								$dataset = $this->DbConnection->lookup("SELECT COUNT(*) FROM t_nfesyslog WHERE CHAVE_NFE='" . $this->getChave() . "'");						list($qt) = $dataset[0];						if ( $qt == "0" ){				$this->InsertBd();				return TRUE;			}						return FALSE;		}				private function incAndamento($num){					if ( !empty($num) ){							$this->id_db = $this->getBdId();								$this->DbConnection->exec("INSERT INTO t_andamento_nfesyslog(id_nfesyslog, andamento_nfesyslog, data_hora) VALUES($this->id_db, '" . $this->getAndamentoCodeNum($num) . "', CURRENT_TIMESTAMP)");			}					}				public function saveConsulta() {			$this->incAndamento(11);				}				public function saveConsultaChave() {			$this->incAndamento(12);				}						private function InsertBd(){			$sql = "INSERT INTO t_nfesyslog(entrada_saida,natureza_operacao,numero_nota,serie_nota,			emitente,chave_nfe,situacao,cpfcnpj,data_emissao,cpfcnpj_destinatario,tipo_ambiente, razao_cliente, data_inclusao, versao_nfe) VALUES(				'$this->entrada_saida','$this->natureza_operacao', '$this->NumeroNota',				'$this->serie_nota','$this->emitente','$this->chave_nfe','I','$this->cpfcnpj',				'" . $this->getDataEmissao() . "', '$this->cpfcnpj_destinatario', $this->tipo_ambiente, '" . $this->getDestinatario() . "', CURRENT_TIMESTAMP, '{$this->versao_nfe}')";					$this->DbConnection->exec($sql);						//echo $sql;						$this->id_db = $this->DbConnection->lastInsertId();						$ins_xml = $this->ProtectString( $this->xml_str ); //Protecting for injection						$this->DbConnection->exec("INSERT INTO t_xml_nfesyslog(id_nfesyslog, xml) VALUES($this->id_db, '$ins_xml')");						//Envia para o andamento de inclus�o			$this->incAndamento(1);		}						public function saveValidade(){			$this->incAndamento(2);		}				public function newXML($xml){			if ( !empty($xml) ){							if ( empty($this->id_db) ){									$this->id_db = $this->getBdId();									}								$this->DbConnection->exec("DELETE FROM t_xml_nfesyslog WHERE id_nfesyslog=$this->id_db");				$this->DbConnection->exec("INSERT INTO t_xml_nfesyslog(id_nfesyslog, xml) VALUES($this->id_db, '$xml')");			}		}				public function saveLog($log){			$this->DbConnection->exec("INSERT INTO t_andamento_nfesyslog(id_nfesyslog, andamento_nfesyslog, data_hora) VALUES($this->id_db, " . utf8_decode($log) . "', CURRENT_TIMESTAMP)");		}				public function saveEnvio(){			$this->incAndamento(4);						$this->DbConnection->exec("update t_nfesyslog set situacao='P' where id_nfesyslog=$this->id_db");		}				public function saveAprovada(){			$this->incAndamento(5);						//Update no campo de Situaçao			$this->DbConnection->exec("update t_nfesyslog set situacao='A' where id_nfesyslog=$this->id_db");		}				public function saveIncluido(){			$this->DbConnection->exec("update t_nfesyslog set situacao='I' where id_nfesyslog=$this->id_db and situacao<>'A'");		}				public function saveCancelada(){			$this->incAndamento(10);						//Update no campo de Situaçao			$this->DbConnection->exec("update t_nfesyslog set situacao='C' where id_nfesyslog=$this->id_db");		}				public function saveReprovada($motivo = ""){					$this->incAndamento(6);						if ( !empty($motivo) ){				$this->DbConnection->exec("INSERT INTO t_andamento_nfesyslog(id_nfesyslog, andamento_nfesyslog, data_hora) VALUES($this->id_db, 'REJEICAO: " . utf8_decode($motivo) . "', CURRENT_TIMESTAMP)");			}						$this->DbConnection->exec("update t_nfesyslog set situacao='R' where id_nfesyslog=$this->id_db and situacao<>'A'");					}				public function getXML(){			return $this->xml_str;		}						public function getRecibo(){					$dataset = $this->DbConnection->lookup("SELECT ultimo_recibo FROM t_nfesyslog WHERE CHAVE_NFE='" . $this->getChave() . "'");						if ( !empty($dataset) ){				list($recibo) = $dataset[0];								return $recibo;			}else{								return NULL;							}					}						public function saveRecibo($recibo){			$this->DbConnection->exec("update t_nfesyslog set ultimo_recibo='$recibo' where id_nfesyslog=$this->id_db");		}												public function saveDenegada(){			$this->incAndamento(7);						$this->DbConnection->exec("update t_nfesyslog set situacao='D' where id_nfesyslog=$this->id_db");		}				public function saveEnvioEmail($emails = ''){			$this->incAndamento(9);						$this->DbConnection->exec("INSERT INTO t_andamento_nfesyslog(id_nfesyslog, andamento_nfesyslog, data_hora) VALUES($this->id_db, 'Emails:" . utf8_decode(substr($emails,0,185)) . "', CURRENT_TIMESTAMP)");						$this->DbConnection->exec("update t_nfesyslog set email_enviado='S', data_email=ifnull(data_email, current_date) where id_nfesyslog=$this->id_db");		}						public function savePrinting(){			$this->incAndamento(8);						//Colocar update do campo impresso			//$this->DbConnection->exec("update t_nfesyslog set danfe_criada='S', data_danfe=ifnull(data_danfe,CURRENT_TIMESTAMP), //tempo_gasto=fTimeNFe(id_nfesyslog) where id_nfesyslog=$this->id_db");			$this->DbConnection->exec("update t_nfesyslog set danfe_criada='S', data_danfe=ifnull(data_danfe,CURRENT_TIMESTAMP) 			where id_nfesyslog=$this->id_db");		}				public function recoverTempoGasto(){			if ( empty($this->id_db) ){	$this->id_db = $this->getBdId(); }			//$this->DbConnection->exec("update t_nfesyslog set danfe_criada='S', data_danfe=fFirstPrint(id_nfesyslog), tempo_gasto=fTimeNFe(id_nfesyslog) where id_nfesyslog=$this->id_db");			$this->DbConnection->exec("update t_nfesyslog set danfe_criada='S' where id_nfesyslog=$this->id_db");		}				public function recoverDataInclusao(){			//if ( empty($this->id_db) ){	$this->id_db = $this->getBdId(); }			//$this->DbConnection->exec("update t_nfesyslog set data_inclusao=fInserted(id_nfesyslog) where id_nfesyslog=$this->id_db");		}						public function saveErrorValidade($motivo = ""){					$this->incAndamento(3);												if ( !empty($motivo) ){				$motivo = str_replace("'", "-",$motivo);							$this->DbConnection->exec("INSERT INTO t_andamento_nfesyslog(id_nfesyslog, andamento_nfesyslog, data_hora) VALUES($this->id_db, 'REJEICAO: " . utf8_decode(substr($motivo,0,185)) . "', CURRENT_TIMESTAMP)");								 //.iconv($enc, "UTF-8", $motivo).			}								}				public function WriteProtocol(){			$this->id_db = $this->getBdId();							try{												$prot = $this->domxml->getElementsByTagName("infProt");				if ( $prot->length > 0){					$this->protocolo = $prot->item(0)->getElementsByTagName("nProt")->item(0)->nodeValue;				}							}catch(Exception $e){				echo $e->getMessage();			}						$this->DbConnection->exec("update t_nfesyslog set protocolo='$this->protocolo' where id_nfesyslog=$this->id_db");		}				public function WriteRazao(){			$this->id_db = $this->getBdId();							$this->DbConnection->exec("update t_nfesyslog set razao_cliente='" . $this->getDestinatario() . "' where id_nfesyslog=$this->id_db");		}						private function getAndamentoCodeNum($code){			$str = "";					switch($code){				case "1":					$str = 'NOTA INCLUIDA';					break;				case "2":					$str = 'NOTA VALIDADA';					break;				case "3":					$str = 'FALHA DE ESQUEMA!!!';					break;				case "4":					$str = 'ENVIADA PARA SEFAZ';					break;				case "5":					$str = 'NOTA APROVADA';					break;				case "6":					$str = 'NOTA REJEITADA';					break;				case "7":					$str = 'NOTA DENEGADA';					break;				case "8":					$str = 'DANFE IMPRESSA';					break;				case "9":					$str = 'EMAIL ENVIADO';					break;				case "10":					$str = 'NOTA CANCELADA';					break;				case "11":					$str = 'CONSULTA REALIZADA';					break;				case "12":					$str = 'CONSULTA REALIZADA POR CHAVE';					break;				default:					$str = 'DESCONHECIDO';					break;			}						return $str;		}			}		class NfeSyslog_x_bd extends NfeSyslog_xml{			function __construct($db, $id){								$this->DbConnection = $db;						//var_dump($this->DbConnection);									try{				$dataset = $this->DbConnection->lookup("select xml from t_xml_nfesyslog where id_nfesyslog=$id");				list($xml) = $dataset[0];			}catch(Exception $e){				echo "erro " . $e->getMessage();			}									if ( empty($xml)){				throw new Exception('Esta nota não possui xml');			}									parent::__construct($this->DbConnection, $xml);					}					}?>